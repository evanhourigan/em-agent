services:
  gateway:
    build: ./services/gateway
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - EVALUATOR_ENABLED=${EVALUATOR_ENABLED:-false}
      - EVALUATOR_INTERVAL_SEC=${EVALUATOR_INTERVAL_SEC:-600}
      - RAG_URL=${RAG_URL:-http://rag:8000}
      - OTEL_ENABLED=${OTEL_ENABLED:-false}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET:-}
      - SLACK_SIGNING_REQUIRED=${SLACK_SIGNING_REQUIRED:-false}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN:-}
      - SLACK_DEFAULT_CHANNEL=${SLACK_DEFAULT_CHANNEL:-}
      - OPA_URL=${OPA_URL:-http://opa:8181}
    depends_on:
      - db
      - opa
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8000/ready || exit 1"]
      interval: 60s
      timeout: 3s
      retries: 5
      start_period: 10s
  db:
    image: pgvector/pgvector:pg15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
  ui:
    build: ./services/ui
    ports:
      - "3000:3000"
    depends_on:
      - gateway
    environment:
      - GATEWAY_URL=http://gateway:8000
      - RAG_URL=http://rag:8000
  rag:
    build: ./services/rag
    ports:
      - "8001:8000"
    environment:
      - EMBEDDINGS_BACKEND=${EMBEDDINGS_BACKEND:-tfidf}
      - OTEL_ENABLED=${OTEL_ENABLED:-false}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-}
      - RAG_PG_ENABLED=${RAG_PG_ENABLED:-false}
      - RAG_USE_VECTOR=${RAG_USE_VECTOR:-false}
      - RAG_PG_DSN=${RAG_PG_DSN:-postgresql+psycopg://postgres:postgres@db:5432/postgres}
  connectors:
    build: ./services/connectors
    environment:
      - GATEWAY_URL=http://gateway:8000
    ports:
      - "8003:8000"
    depends_on:
      - gateway
  mcp:
    build: ./services/mcp
    environment:
      - GATEWAY_URL=http://gateway:8000
    ports:
      - "8002:8000"
    depends_on:
      - gateway
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8000/health || exit 1"]
      interval: 60s
      timeout: 3s
      retries: 5
      start_period: 10s

  opa:
    image: openpolicyagent/opa:latest
    platform: linux/amd64
    command: ["run", "--server", "--addr=0.0.0.0:8181", "-b", "/policies"]
    ports:
      - "8181:8181"
    volumes:
      - ./services/opa/policies:/policies:ro

  nats:
    image: nats:2.10
    command: ["-js"]
    ports:
      - "4222:4222"
      - "8222:8222"

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"

  workers:
    build: ./services/workers
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  temporal:
    image: temporalio/auto:1.23.0
    ports:
      - "7233:7233"   # gRPC
      - "8233:8233"   # Web UI

  workers_temporal:
    build: ./services/workers_temporal
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_NAMESPACE=default
    depends_on:
      - db
      - temporal
